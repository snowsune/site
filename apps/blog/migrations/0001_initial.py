# Generated by Django 5.1.6 on 2025-08-10 02:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="BlogImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="blog/images/")),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("filename", models.CharField(blank=True, max_length=255)),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="BlogPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=200, unique=True)),
                ("content", models.TextField()),
                ("content_html", models.TextField(blank=True)),
                ("excerpt", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("original_posting_date", models.DateTimeField(blank=True, null=True)),
                ("meta_description", models.TextField(blank=True)),
                (
                    "featured_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="blog/featured/"
                    ),
                ),
                (
                    "webhook_url",
                    models.URLField(
                        blank=True, help_text="Webhook URL for posting announcements"
                    ),
                ),
                ("webhook_enabled", models.BooleanField(default=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blog_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="blog_posts", to="blog.tag"
                    ),
                ),
            ],
            options={
                "ordering": ["-published_at", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status", "published_at"],
                        name="blog_blogpo_status_aa5436_idx",
                    ),
                    models.Index(
                        fields=["author", "status"],
                        name="blog_blogpo_author__e8757b_idx",
                    ),
                ],
            },
        ),
    ]
